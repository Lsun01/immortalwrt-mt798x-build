name: Build mt7981 padavanonly/immortalwrt-mt798x-24.10

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
      
env:
  REPO_URL: https://github.com/padavanonly/immortalwrt-mt798x-24.10.git
  REPO_BRANCH: 2410
  TZ: Asia/Shanghai
  FEEDS_CONF: feeds.conf.default

jobs:
  build:
    runs-on: ubuntu-22.04
    
    permissions:
      contents: write
      actions: write
      
    steps:
    
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt -yqq update
        sudo -E apt -yqq full-upgrade
        sudo -E apt -yqq autoremove --purge
        sudo -E apt -yqq autoclean
        sudo -E apt -yqq clean
        sudo -E apt -yqq install dos2unix libfuse-dev
        sudo bash -c 'bash <(curl -sL https://build-scripts.immortalwrt.org/init_build_environment.sh)'
        sudo -E systemctl daemon-reload
        sudo -E timedatectl set-timezone "Asia/Shanghai"
        
        sudo mkdir -p /srcdir
        sudo chown $USER:$GROUPS /srcdir

    - name: Clone source code
      working-directory: /srcdir
      run: |
        echo "Free space:"
        df -hT $PWD
        git clone $REPO_URL --depth=1 --single-branch --branch $REPO_BRANCH openwrt
        ln -sf /srcdir/openwrt $GITHUB_WORKSPACE/openwrt
        echo "REPO_HEAD=_$(git ls-remote $REPO_URL HEAD | head -c7)" >> $GITHUB_ENV
        
        # GitHub Action 移除国内下载源
        PROJECT_MIRRORS_FILE="./scripts/projectsmirrors.json"
        if [ -f "$PROJECT_MIRRORS_FILE" ]; then
          sed -i '/.cn\//d; /tencent/d; /aliyun/d' "$PROJECT_MIRRORS_FILE"
        fi

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom config
      run: |
        cd openwrt
        cp -f ./defconfig/mt7981-ax3000.config .config
        #echo "CONFIG_PACKAGE_kmod-netlink-diag=y" >> .config
        # echo "CONFIG_PACKAGE_kmod-nft-compat=y" >> .config
        #echo "CONFIG_PACKAGE_kmod-nft-core=y" >> .config
        # echo "CONFIG_PACKAGE_kmod-nft-fib=y" >> .config
        # echo "CONFIG_PACKAGE_kmod-nft-nat=y" >> .config
        # echo "CONFIG_PACKAGE_kmod-nft-offload=y" >> .config
        # echo "CONFIG_PACKAGE_kmod-nft-socket=y" >> .config
        echo "CONFIG_PACKAGE_kmod-wireguard=y" >> .config
        
    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8 V=11
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && !cancelled()
      with:
        name: ImmortalWrt_padavanonly_bin_${{ env.REPO_HEAD }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: (!cancelled())
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: ImmortalWrt_padavanonly_firmware_${{ env.REPO_HEAD }}
        path: ${{ env.FIRMWARE }}
        
    - name: Generate release tag
      id: tag
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        echo "release_tag=ImmortalWrt_padavanonly_${{ env.REPO_HEAD }}" >> $GITHUB_OUTPUT
        touch release.txt
        echo "ImmortalWrt_padavanonly_${{ env.REPO_HEAD }}" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware to release
      id: release
      uses: softprops/action-gh-release@v2
      if: steps.tag.outputs.status == 'success' && !cancelled()
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Clean Compile
      id: clean-compile
      run: |
        cd openwrt
        make clean

    - name: Cache Compile
      id: cache-compile
      uses: actions/cache/save@v4
      if: steps.compile.outputs.status == 'success' && !cancelled()
      with:
        path: openwrt
        key: ${{ runner.os }}-openwrt-${{ hashFiles('openwrt/feeds.conf.default') }}

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 7
        keep_minimum_runs: 3
